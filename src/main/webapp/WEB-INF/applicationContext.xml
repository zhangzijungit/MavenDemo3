<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	                       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd

	                       http://www.springframework.org/schema/aop
	                       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd

	                       http://www.springframework.org/schema/tx
	                       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd

	                       http://www.springframework.org/schema/context
	                       http://www.springframework.org/schema/context/spring-context-3.1.xsd
	                       "
       default-autowire="byName"
>
    <!-- 引入注解支持 -->
    <context:annotation-config></context:annotation-config>
    <!-- 扫描业务包 -->
    <context:component-scan base-package="com.biz"></context:component-scan>
    <context:component-scan base-package="com.mapper"></context:component-scan>
    <context:component-scan base-package="com.util"></context:component-scan>
    <context:component-scan base-package="com.controller"></context:component-scan>
    <context:component-scan base-package="com.biz.lpm"></context:component-scan>
    <!-- 配置Spring的数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/empdb?characterEncoding=utf-8" />
        <property name="username" value="root" />
        <property name="password" value="rootroot" />
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1"/>
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="500"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="2"/>
        <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="1"/>
    </bean>
    <!--配置sqlSessionFactoryBean  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引入数据源操作  -->
        <property name="dataSource" ref="dataSource"></property>
        <!--引入mybatis配置文件  -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--引入sql映射文件（在Spring和mybatis中只能出现一个）  -->
        <property name="mapperLocations">
            <list>
                <value>classpath:com/mapper/*.xml</value>
            </list>
        </property>
    </bean>
    <!--配置sqlSessionTemplate模板（每次运行都会得到一个新的sqlSession,所以每个方法都有独立sqlSession线程安全）  -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
    </bean>
    <!--配置BankMapper（相当于利用Spring执行mapper,告诉spring，mapper要通过sqlSessionFactory连接数据源）  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mapper"></property>
    </bean>

    <!-- 事务（配置Spring管理mybatis事务） -->
    <!--配置jdbc事务管理器  -->
    <bean id="txmanage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 注解事务配置 -->
    <tx:annotation-driven transaction-manager="txmanage"/>
</beans>